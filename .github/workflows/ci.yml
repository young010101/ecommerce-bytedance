name: CI

on:
  push:
    # branches:
    #   - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: sky_take_out
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: docker composer
        run: |
          docker compose -f docker/standalone-derby.yaml up -d

      - name: Check Running Containers
        run: docker ps  # üõ†Ô∏è Á°Æ‰øùÂÆπÂô®Ê≠£Âú®ËøêË°å

      - name: Wait for Nacos service to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:8848/nacos/v1/console/health; then
              echo "Nacos is up!"
              exit 0
            fi
            echo "Waiting for Nacos..."
            sleep 2
          done
          echo "Nacos did not become ready in time" && exit 1

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Wait for MySQL service to be ready
        run: |
          for i in {1..30}; do
            if docker exec $(docker ps -q -f name=mysql) mysqladmin ping -h "localhost" --silent; then
              echo "MySQL is up!"
              exit 0
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL did not become ready in time" && exit 1

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build and Test
        env:
          SPRING_PROFILES_ACTIVE: ci
        run: |
          mvn clean test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

#      - name: Log in to Docker Hub
#        uses: docker/login-action@327cd5a69de6c009b9ce71bce8395f28e651bf99
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/sky-take-out:latest
